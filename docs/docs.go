// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/market/best-price": {
            "put": {
                "description": "Get the best exchange price for a given market and volume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "market"
                ],
                "summary": "Get best exchange price by volume",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.GetBestExchangePriceByVolumeRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.GetBestExchangePriceByVolumeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/markets": {
            "get": {
                "description": "Get all available market",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "market"
                ],
                "summary": "List available market",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.FetchAndUpdateMarketsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.FetchAndUpdateMarketsResponse": {
            "type": "object",
            "properties": {
                "markets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/http.MarketDto"
                    }
                }
            }
        },
        "http.GetBestExchangePriceByVolumeRequestBody": {
            "type": "object",
            "properties": {
                "mega_market_id": {
                    "type": "integer",
                    "example": 1
                },
                "volume": {
                    "description": "decimal string",
                    "type": "string",
                    "example": "100.0"
                }
            }
        },
        "http.GetBestExchangePriceByVolumeResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "$ref": "#/definitions/http.MarketDto"
                },
                "price": {
                    "type": "number",
                    "example": 100
                }
            }
        },
        "http.MarketDto": {
            "type": "object",
            "properties": {
                "exchange_market_identifier": {
                    "type": "string",
                    "example": "BTC/USDT"
                },
                "exchange_name": {
                    "type": "string",
                    "example": "ompfinex"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "market_name": {
                    "type": "string",
                    "example": "BTC/USDT"
                },
                "mega_market_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
